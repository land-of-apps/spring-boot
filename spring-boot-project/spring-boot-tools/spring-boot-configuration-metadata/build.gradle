plugins {
	id "java-library"
	id "org.springframework.boot.conventions"
	id "org.springframework.boot.deployed"
}

description = "Spring Boot Configuration Metadata"

dependencies {
	api(platform(project(path: ":spring-boot-project:spring-boot-parent")))

	implementation("com.vaadin.external.google:android-json")

	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.assertj:assertj-core")
	testImplementation("org.springframework:spring-core")
}

test {
	ignoreFailures = true
	systemProperty 'appmap.debug', true
	systemProperty 'appmap.config.file', "$rootDir/appmap.yml"
	systemProperty 'appmap.output.directory', "$rootDir/tmp/appmap"
	def agentLocation = "$rootDir/appmap.jar"
	def appmapAgent = "-javaagent:".concat(agentLocation)
	if (!jvmArgs.contains(appmapAgent))
		jvmArgs += appmapAgent
	maxParallelForks Runtime.runtime.availableProcessors() * 2
	testLogging {
		exceptionFormat = 'full'
	}
}